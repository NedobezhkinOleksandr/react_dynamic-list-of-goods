{"version":3,"sources":["GoodsList.tsx","api/goods.ts","App.tsx","index.tsx"],"names":["GoodsList","_ref","goods","_jsx","children","map","good","id","name","color","style","getAll","fetch","then","response","json","App","_useState","useState","_useState2","_slicedToArray","setGoods","loadGoods","_asyncToGenerator","_regeneratorRuntime","mark","_callee","result","goodsFromServer","wrap","_context","prev","next","sent","stop","_x","apply","arguments","_jsxs","className","type","onClick","sort","a","b","localeCompare","slice","filter","ReactDOM","render","document","getElementById"],"mappings":"qPAOaA,EAA6B,SAAHC,GAAA,IAAMC,EAAKD,EAALC,MAAK,OAChDC,cAAA,MAAAC,SACGF,EAAMG,KAAI,SAAAC,GACT,IAAQC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAElB,OACEN,cAAA,MAEE,UAAQ,OACRO,MAAO,CAAED,SAAQL,SAEhBI,GAJID,SCTR,SAASI,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAGxB,ICHMC,EAAgB,WAC3B,IAAAC,EAA0BC,mBAAiB,IAAGC,EAAAC,YAAAH,EAAA,GAAvCf,EAAKiB,EAAA,GAAEE,EAAQF,EAAA,GAEhBG,EAAS,eAAArB,EAAAsB,YAAAC,IAAAC,MAAG,SAAAC,EAAOC,GAAuB,IAAAC,EAAA,OAAAJ,IAAAK,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EAChBL,EAAO,KAAD,EAA9BC,EAAeE,EAAAG,KAErBZ,EAASO,GAAiB,wBAAAE,EAAAI,UAAAR,OAC3B,gBAJcS,GAAA,OAAAlC,EAAAmC,MAAA,KAAAC,YAAA,GAMf,OACEC,eAAA,OAAKC,UAAU,MAAKnC,SAAA,CAClBD,cAAA,MAAAC,SAAI,0BAEJD,cAAA,UACEqC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMnB,EAAUX,MAAUP,SACpC,mBAIDD,cAAA,UACEqC,KAAK,SACL,UAAQ,oBACRC,QAAS,kBAAMnB,EDpBdX,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAMwC,MAAK,SAACC,EAAGC,GAAC,OAAKD,EAAEnC,KAAKqC,cAAcD,EAAEpC,SACxDsC,MAAM,EAAG,QCkB8B1C,SACvC,uBAIDD,cAAA,UACEqC,KAAK,SACL,UAAQ,aACRC,QAAS,kBAAMnB,EDtBdX,IACJE,MAAK,SAAAX,GAAK,OAAIA,EAAM6C,QAAO,SAAAzC,GAAI,MAAmB,QAAfA,EAAKG,cCqBGL,SACzC,mBAIDD,cAACH,EAAS,CAACE,MAAOA,QCzCxB8C,IAASC,OACP9C,cAACa,EAAG,IACJkC,SAASC,eAAe,W","file":"static/js/main.f5ae77a7.chunk.js","sourcesContent":["import React from 'react';\nimport { Good } from './types/Good';\n\ntype Props = {\n  goods: Good[]\n};\n\nexport const GoodsList: React.FC<Props> = ({ goods }) => (\n  <ul>\n    {goods.map(good => {\n      const { id, name, color } = good;\n\n      return (\n        <li\n          key={id}\n          data-cy=\"good\"\n          style={{ color }}\n        >\n          {name}\n        </li>\n      );\n    })}\n  </ul>\n);\n","import { Good } from '../types/Good';\n\n// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\n\nexport function getAll(): Promise<Good[]> {\n  return fetch(API_URL)\n    .then(response => response.json());\n}\n\nexport const get5First = () => {\n  return getAll()\n    .then(goods => goods.sort((a, b) => a.name.localeCompare(b.name))\n      .slice(0, 5));\n};\n\nexport const getRedGoods = () => {\n  return getAll()\n    .then(goods => goods.filter(good => good.color === 'red'));\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { GoodsList } from './GoodsList';\n\nimport { Good } from './types/Good';\nimport { getAll, get5First, getRedGoods } from './api/goods';\n\nexport const App: React.FC = () => {\n  const [goods, setGoods] = useState<Good[]>([]);\n\n  const loadGoods = async (result: Promise<Good[]>) => {\n    const goodsFromServer = await result;\n\n    setGoods(goodsFromServer);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Dynamic list of Goods</h1>\n\n      <button\n        type=\"button\"\n        data-cy=\"all-button\"\n        onClick={() => loadGoods(getAll())}\n      >\n        Load all goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"first-five-button\"\n        onClick={() => loadGoods(get5First())}\n      >\n        Load 5 first goods\n      </button>\n\n      <button\n        type=\"button\"\n        data-cy=\"red-button\"\n        onClick={() => loadGoods(getRedGoods())}\n      >\n        Load red goods\n      </button>\n\n      <GoodsList goods={goods} />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}